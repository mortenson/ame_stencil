<?php

/**
 * @file Contains hook implementations for the Ame Stencil module.
 */

use Drupal\Core\Url;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Gets the REST resource URL for a given entity.
 *
 * @param EntityInterface $entity
 *   The entity you need the REST resource URL for.
 * @return bool|string
 *   The resource URL, or FALSE if there was an error.
 */
function _ame_stencil_get_resource_url(EntityInterface $entity) {
  $type_id = $entity->getEntityTypeId();
  $rest_storage = \Drupal::entityTypeManager()->getStorage('rest_resource_config');
  /** @var \Drupal\rest\RestResourceConfigInterface $config */
  if (!($config = $rest_storage->load('entity.' . $type_id))) {
    return FALSE;
  }
  $resource = $config->getResourcePlugin();
  $base_route = 'entity.' . $type_id . '.PATCH';
  if (!$resource->routes()->get($base_route)) {
    return FALSE;
  }
  $resource_url = (new Url('rest.' . $base_route, [
    $type_id => $entity->id(),
  ]))->toString();
  return $resource_url;
}

/**
 * Implements hook_entity_view_alter().
 */
function ame_stencil_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if (!($resource_url = _ame_stencil_get_resource_url($entity))) {
    return;
  }

  if ($entity->getEntityTypeId() === 'node') {
    $build['ame_bundle'] = [
      '#type' => 'html_tag',
      '#tag' => 'ame-value',
      '#attributes' => [
        'ame-handler' => 'rest',
        'ame-resource' => $resource_url,
        'ame-path' => 'type',
        'return' => $entity->bundle(),
      ],
    ];
  }
}

/**
 * Implements hook_preprocess_HOOK() for the page title template.
 */
function ame_stencil_preprocess_page_title(&$variables) {
  $node = \Drupal::request()->attributes->get('node');
  if ($node && is_object($node)) {
    $resource_url = _ame_stencil_get_resource_url($node);
    $title = (string) $variables['title'];
    $variables['title'] = [
      '#type' => 'html_tag',
      '#tag' => 'ame-text',
      '#value' => $title,
      '#attributes' => [
        'ame-handler' => 'rest',
        'ame-resource' => $resource_url,
        'ame-path' => 'title.0.value',
      ],
    ];
  }
}

/**
 * Implements hook_preprocess_page().
 */
function ame_stencil_preprocess_page(array &$variables) {
  $request = \Drupal::request();
  $route = $request->attributes->get('_route');
  if ($route === 'entity.node.canonical') {
    $variables['page']['header']['ame_handler'] = [
      '#type' => 'html_tag',
      '#tag' => 'ame-rest-handler',
      '#value' => '',
      '#attributes' => [
        'handler-name' => 'rest',
        'base-url' => base_path(),
      ],
    ];
    $variables['page']['header']['ame_edit'] = [
      '#type' => 'html_tag',
      '#tag' => 'ame-edit',
      '#value' => '',
    ];
    $variables['page']['header']['ame_save'] = [
      '#type' => 'html_tag',
      '#tag' => 'ame-save',
      '#value' => '',
    ];
  }
}
